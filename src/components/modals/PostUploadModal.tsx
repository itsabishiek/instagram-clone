import {
  Avatar,
  Box,
  Button,
  CloseButton,
  Flex,
  Image,
  Input,
  Modal,
  ModalContent,
  ModalFooter,
  ModalOverlay,
  Text,
  Textarea,
  useDisclosure,
} from "@chakra-ui/react";
import {
  collection,
  doc,
  serverTimestamp,
  Timestamp,
  writeBatch,
} from "firebase/firestore";
import { getDownloadURL, ref, uploadString } from "firebase/storage";
import moment from "moment";
import Head from "next/head";
import React, { useRef, useState } from "react";
import { useSetRecoilState } from "recoil";
import { Post, postState } from "../../atoms/postsAtom";
import { userDataState } from "../../atoms/userDataAtom";
import { firestore, storage } from "../../firebase/clientApp";
import useSelectedFile from "../../hooks/useSelectedFile";
import useUserData from "../../hooks/useUserData";
import DiscardModal from "./DiscardModal";

type PostUploadModalProps = {
  children: React.ReactNode;
};

const PostUploadModal: React.FC<PostUploadModalProps> = ({ children }) => {
  const setPostStateValue = useSetRecoilState(postState);
  const setUserStateValue = useSetRecoilState(userDataState);

  const { isOpen, onOpen, onClose } = useDisclosure();
  const { onSelectFile, selectedFile, setSelectedFile } = useSelectedFile();
  const { userStateValue, loading } = useUserData();
  const userData = userStateValue?.userData;
  const selectedFileRef = useRef<HTMLInputElement>(null);
  const [nextStep, setNextStep] = useState(0);
  const [caption, setCaption] = useState("");
  const [location, setLocation] = useState("");
  const [creatingPost, setCreatingPost] = useState(false);

  const handleCreatePost = async () => {
    setCreatingPost(true);
    try {
      const batch = writeBatch(firestore);

      const newData = {
        userId: userData.uid,
        name: userData.fullname,
        username: userData.username,
        profileImg: userData.imageURL || "",
        caption: caption || "",
        location: location || "",
        numberOfComments: 0,
        numberOfLikes: 0,
        createdAt: serverTimestamp() as Timestamp,
      };

      const postDocRef = doc(collection(firestore, "posts"));

      batch.set(postDocRef, newData);

      if (selectedFile) {
        const imageRef = ref(storage, `posts/${postDocRef.id}/image`);
        await uploadString(imageRef, selectedFile, "data_url");
        const downloadURL = await getDownloadURL(imageRef);

        batch.update(postDocRef, {
          imageURL: downloadURL,
        });

        setPostStateValue((prev) => ({
          ...prev,
          posts: [
            {
              id: postDocRef.id,
              userId: userData.uid,
              name: userData.fullname,
              username: userData.username,
              imageURL: downloadURL,
              profileImg: userData.imageURL || "",
              caption: caption || "",
              location: location || "",
              numberOfComments: 0,
              numberOfLikes: 0,
              createdAt: Date.now(),
            },
            ...prev.posts,
          ] as Post[],
        }));
      }

      await batch.commit();

      onClose();

      setSelectedFile("");
      setNextStep(0);
      setCaption("");
      setLocation("");
    } catch (error) {
      console.log("handleCreatePost Error", error);
    }
    setCreatingPost(false);
  };

  return (
    <>
      {isOpen && (
        <Head>
          <title>Create new post â€¢ Instagram</title>
          <meta name="description" content="Generated by create next app" />
          <link
            rel="icon"
            href="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/2048px-Instagram_icon.png"
          />
        </Head>
      )}

      <Box onClick={onOpen}>{children}</Box>

      <Modal
        isOpen={isOpen}
        onClose={onClose}
        isCentered
        size={{ base: "full", md: nextStep === 0 ? "lg" : "full" }}
      >
        <ModalOverlay bg={{ base: "white", md: "rgba(0,0,0,0.4)" }} />
        <ModalContent
          borderRadius="xl"
          outline="none"
          margin={{
            md: nextStep === 1 ? "90px 130px" : "",
            lg: nextStep === 1 ? "90px 250px" : "",
          }}
          boxShadow={{
            base: "none",
            md: `0 10px 15px -3px rgba(0, 0, 0, 0.1),0 4px 6px
          -2px rgba(0, 0, 0, 0.05)`,
          }}
        >
          {!selectedFile ? (
            <>
              <Flex
                align="center"
                justify="center"
                borderBottom="1px solid"
                borderColor="gray.200"
                p="10px 0px"
              >
                <Text fontWeight={600} textAlign="center">
                  Create new post
                </Text>
                <CloseButton position="absolute" right={3} onClick={onClose} />
              </Flex>
              <Flex
                flexDir="column"
                height="60vh"
                align="center"
                justify="center"
              >
                <svg
                  aria-label="Icon to represent media such as images or videos"
                  color="#262626"
                  fill="#262626"
                  height="77"
                  role="img"
                  viewBox="0 0 97.6 77.3"
                  width="96"
                >
                  <path
                    d="M16.3 24h.3c2.8-.2 4.9-2.6 4.8-5.4-.2-2.8-2.6-4.9-5.4-4.8s-4.9 2.6-4.8 5.4c.1 2.7 2.4 4.8 5.1 4.8zm-2.4-7.2c.5-.6 1.3-1 2.1-1h.2c1.7 0 3.1 1.4 3.1 3.1 0 1.7-1.4 3.1-3.1 3.1-1.7 0-3.1-1.4-3.1-3.1 0-.8.3-1.5.8-2.1z"
                    fill="currentColor"
                  ></path>
                  <path
                    d="M84.7 18.4L58 16.9l-.2-3c-.3-5.7-5.2-10.1-11-9.8L12.9 6c-5.7.3-10.1 5.3-9.8 11L5 51v.8c.7 5.2 5.1 9.1 10.3 9.1h.6l21.7-1.2v.6c-.3 5.7 4 10.7 9.8 11l34 2h.6c5.5 0 10.1-4.3 10.4-9.8l2-34c.4-5.8-4-10.7-9.7-11.1zM7.2 10.8C8.7 9.1 10.8 8.1 13 8l34-1.9c4.6-.3 8.6 3.3 8.9 7.9l.2 2.8-5.3-.3c-5.7-.3-10.7 4-11 9.8l-.6 9.5-9.5 10.7c-.2.3-.6.4-1 .5-.4 0-.7-.1-1-.4l-7.8-7c-1.4-1.3-3.5-1.1-4.8.3L7 49 5.2 17c-.2-2.3.6-4.5 2-6.2zm8.7 48c-4.3.2-8.1-2.8-8.8-7.1l9.4-10.5c.2-.3.6-.4 1-.5.4 0 .7.1 1 .4l7.8 7c.7.6 1.6.9 2.5.9.9 0 1.7-.5 2.3-1.1l7.8-8.8-1.1 18.6-21.9 1.1zm76.5-29.5l-2 34c-.3 4.6-4.3 8.2-8.9 7.9l-34-2c-4.6-.3-8.2-4.3-7.9-8.9l2-34c.3-4.4 3.9-7.9 8.4-7.9h.5l34 2c4.7.3 8.2 4.3 7.9 8.9z"
                    fill="currentColor"
                  ></path>
                  <path
                    d="M78.2 41.6L61.3 30.5c-2.1-1.4-4.9-.8-6.2 1.3-.4.7-.7 1.4-.7 2.2l-1.2 20.1c-.1 2.5 1.7 4.6 4.2 4.8h.3c.7 0 1.4-.2 2-.5l18-9c2.2-1.1 3.1-3.8 2-6-.4-.7-.9-1.3-1.5-1.8zm-1.4 6l-18 9c-.4.2-.8.3-1.3.3-.4 0-.9-.2-1.2-.4-.7-.5-1.2-1.3-1.1-2.2l1.2-20.1c.1-.9.6-1.7 1.4-2.1.8-.4 1.7-.3 2.5.1L77 43.3c1.2.8 1.5 2.3.7 3.4-.2.4-.5.7-.9.9z"
                    fill="currentColor"
                  ></path>
                </svg>

                <Text fontWeight="light" fontSize="15pt" mt={3}>
                  Drag photos and videos here
                </Text>
                <input
                  id="file-upload"
                  type="file"
                  accept="image/x-png,image/gif,image/jpeg,image/jpg,image/png"
                  hidden
                  ref={selectedFileRef}
                  onChange={onSelectFile}
                />
                <Button
                  h="30px"
                  mt={5}
                  onClick={() => selectedFileRef.current?.click()}
                >
                  Select from computer
                </Button>
              </Flex>
            </>
          ) : (
            <>
              {nextStep === 0 && (
                <>
                  <Flex
                    align="center"
                    justifyContent="space-between"
                    borderBottom="1px solid"
                    borderColor="gray.200"
                    p="10px 14px"
                    zIndex={3}
                    bg="white"
                  >
                    <DiscardModal setSelectedFile={setSelectedFile}>
                      <svg
                        aria-label="Back"
                        color="#262626"
                        fill="#262626"
                        height="24"
                        role="img"
                        viewBox="0 0 24 24"
                        width="24"
                        cursor="pointer"
                      >
                        <line
                          fill="none"
                          stroke="currentColor"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth="2"
                          x1="2.909"
                          x2="22.001"
                          y1="12.004"
                          y2="12.004"
                        ></line>
                        <polyline
                          fill="none"
                          points="9.276 4.726 2.001 12.004 9.276 19.274"
                          stroke="currentColor"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth="2"
                        ></polyline>
                      </svg>
                    </DiscardModal>
                    <Text fontWeight={600}>Crop</Text>
                    <Text
                      fontSize="11pt"
                      color="brand.100"
                      fontWeight={600}
                      cursor="pointer"
                      onClick={() => setNextStep(1)}
                    >
                      Next
                    </Text>
                  </Flex>

                  <Flex
                    flexDir="column"
                    minH={{ base: "auto", md: "60vh" }}
                    align="center"
                    justify="center"
                  >
                    <Image src={selectedFile} alt="" maxH="60vh" />
                  </Flex>

                  <ModalFooter
                    justifyContent="space-between"
                    p="16px"
                    pos="absolute"
                    w="100%"
                    bottom={0}
                  >
                    <Flex>
                      <Box
                        bg="rgba(26, 26, 26, .8)"
                        p="8px"
                        borderRadius="full"
                        cursor="pointer"
                        _hover={{ opacity: 0.8 }}
                        mr={3}
                      >
                        <svg
                          aria-label="Select crop"
                          color="#ffffff"
                          fill="#ffffff"
                          height="16"
                          role="img"
                          viewBox="0 0 24 24"
                          width="16"
                        >
                          <path d="M10 20H4v-6a1 1 0 00-2 0v7a1 1 0 001 1h7a1 1 0 000-2zM20.999 2H14a1 1 0 000 2h5.999v6a1 1 0 002 0V3a1 1 0 00-1-1z"></path>
                        </svg>
                      </Box>
                      <Box
                        bg="rgba(26, 26, 26, .8)"
                        p="8px"
                        borderRadius="full"
                        cursor="pointer"
                        _hover={{ opacity: 0.8 }}
                      >
                        <svg
                          aria-label="Select zoom"
                          color="#ffffff"
                          fill="#ffffff"
                          height="16"
                          role="img"
                          viewBox="0 0 24 24"
                          width="16"
                        >
                          <path d="M22.707 21.293l-4.825-4.825a9.519 9.519 0 10-1.414 1.414l4.825 4.825a1 1 0 001.414-1.414zM10.5 18.001a7.5 7.5 0 117.5-7.5 7.509 7.509 0 01-7.5 7.5zm3.5-8.5h-2.5v-2.5a1 1 0 10-2 0v2.5H7a1 1 0 100 2h2.5v2.5a1 1 0 002 0v-2.5H14a1 1 0 000-2z"></path>
                        </svg>
                      </Box>
                    </Flex>
                    <Box
                      bg="rgba(26, 26, 26, .8)"
                      p="8px"
                      borderRadius="full"
                      cursor="pointer"
                      _hover={{ opacity: 0.8 }}
                    >
                      <svg
                        aria-label="Open media gallery"
                        color="#ffffff"
                        fill="#ffffff"
                        height="16"
                        role="img"
                        viewBox="0 0 24 24"
                        width="16"
                      >
                        <path
                          d="M19 15V5a4.004 4.004 0 00-4-4H5a4.004 4.004 0 00-4 4v10a4.004 4.004 0 004 4h10a4.004 4.004 0 004-4zM3 15V5a2.002 2.002 0 012-2h10a2.002 2.002 0 012 2v10a2.002 2.002 0 01-2 2H5a2.002 2.002 0 01-2-2zm18.862-8.773A.501.501 0 0021 6.57v8.431a6 6 0 01-6 6H6.58a.504.504 0 00-.35.863A3.944 3.944 0 009 23h6a8 8 0 008-8V9a3.95 3.95 0 00-1.138-2.773z"
                          fillRule="evenodd"
                        ></path>
                      </svg>
                    </Box>
                  </ModalFooter>
                </>
              )}

              {nextStep === 1 && (
                <>
                  <Flex
                    align="center"
                    justifyContent="space-between"
                    borderBottom="1px solid"
                    borderColor="gray.200"
                    p="10px 16px"
                    zIndex={3}
                    bg="white"
                  >
                    <Box onClick={() => setNextStep(0)}>
                      <svg
                        aria-label="Back"
                        color="#262626"
                        fill="#262626"
                        height="24"
                        role="img"
                        viewBox="0 0 24 24"
                        width="24"
                        cursor="pointer"
                      >
                        <line
                          fill="none"
                          stroke="currentColor"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth="2"
                          x1="2.909"
                          x2="22.001"
                          y1="12.004"
                          y2="12.004"
                        ></line>
                        <polyline
                          fill="none"
                          points="9.276 4.726 2.001 12.004 9.276 19.274"
                          stroke="currentColor"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth="2"
                        ></polyline>
                      </svg>
                    </Box>
                    <Text fontWeight={600}>Create new post</Text>
                    <Button
                      fontSize="11pt"
                      color="brand.100"
                      fontWeight={600}
                      variant="shareButton"
                      isLoading={creatingPost}
                      onClick={handleCreatePost}
                    >
                      Share
                    </Button>
                  </Flex>

                  <Flex flexDir={{ base: "column", md: "row" }} height="70vh">
                    <Flex
                      flexDir="column"
                      minH={{ base: "auto", md: "60vh" }}
                      h={{ base: "400px", md: "100%" }}
                      align="center"
                      justify="center"
                      borderRight="1px solid"
                      borderColor="gray.200"
                      w="100%"
                      flex="0 0 60%"
                    >
                      <Image src={selectedFile} alt="" maxH="60vh" />
                    </Flex>

                    <Flex flexDir="column" w="100%" flex="0 0 40%">
                      <Flex align="center" margin="18px 16px 14px 16px">
                        <Avatar src={userData.imageURL} size="sm" mr={3} />
                        <Text fontWeight={600}>{userData.username}</Text>
                      </Flex>
                      <Textarea
                        placeholder="Write a caption..."
                        border="none"
                        borderColor="none"
                        focusBorderColor="none"
                        _placeholder={{ color: "grey" }}
                        fontSize={{ base: "10pt", md: "11.5pt" }}
                        h="150px"
                        resize="none"
                        value={caption}
                        onChange={(e) => setCaption(e.target.value)}
                      />
                      <Flex
                        align="center"
                        justify="space-between"
                        p="12px"
                        mt={2}
                        borderBottom="1px solid"
                        borderColor="gray.200"
                      >
                        <svg
                          aria-label="Emoji"
                          color="#8e8e8e"
                          fill="#8e8e8e"
                          height="20"
                          role="img"
                          viewBox="0 0 24 24"
                          width="20"
                          cursor="pointer"
                        >
                          <path d="M15.83 10.997a1.167 1.167 0 101.167 1.167 1.167 1.167 0 00-1.167-1.167zm-6.5 1.167a1.167 1.167 0 10-1.166 1.167 1.167 1.167 0 001.166-1.167zm5.163 3.24a3.406 3.406 0 01-4.982.007 1 1 0 10-1.557 1.256 5.397 5.397 0 008.09 0 1 1 0 00-1.55-1.263zM12 .503a11.5 11.5 0 1011.5 11.5A11.513 11.513 0 0012 .503zm0 21a9.5 9.5 0 119.5-9.5 9.51 9.51 0 01-9.5 9.5z"></path>
                        </svg>
                        <Text
                          fontSize="9pt"
                          color="#c7c7c7"
                          cursor="pointer"
                          _hover={{ color: "#262626" }}
                        >
                          6/2,200
                        </Text>
                      </Flex>

                      <Flex
                        align="center"
                        justify="space-between"
                        borderBottom="1px solid"
                        borderColor="gray.200"
                        pr="12px"
                        display={{ base: "none", md: "flex" }}
                      >
                        <Input
                          focusBorderColor="none"
                          placeholder="Add location"
                          border="none"
                          fontSize="11.5pt"
                          value={location}
                          onChange={(e) => setLocation(e.target.value)}
                        />
                        <svg
                          aria-label="Add location"
                          color="#8e8e8e"
                          fill="#8e8e8e"
                          height="16"
                          role="img"
                          viewBox="0 0 24 24"
                          width="16"
                          cursor="pointer"
                        >
                          <path d="M12.053 8.105a1.604 1.604 0 101.604 1.604 1.604 1.604 0 00-1.604-1.604zm0-7.105a8.684 8.684 0 00-8.708 8.66c0 5.699 6.14 11.495 8.108 13.123a.939.939 0 001.2 0c1.969-1.628 8.109-7.424 8.109-13.123A8.684 8.684 0 0012.053 1zm0 19.662C9.29 18.198 5.345 13.645 5.345 9.66a6.709 6.709 0 0113.417 0c0 3.985-3.944 8.538-6.709 11.002z"></path>
                        </svg>
                      </Flex>

                      <Flex
                        align="center"
                        justify="space-between"
                        p="12px"
                        mt={2}
                        borderBottom="1px solid"
                        borderColor="gray.200"
                        display={{ base: "none", md: "flex" }}
                      >
                        <Text fontSize="11.5pt">Accessibility</Text>
                        <svg
                          aria-label="Down chevron icon"
                          color="#262626"
                          fill="#262626"
                          height="16"
                          role="img"
                          viewBox="0 0 24 24"
                          width="16"
                          style={{ transform: "rotate(90deg)" }}
                          cursor="pointer"
                        >
                          <path d="M21 17.502a.997.997 0 01-.707-.293L12 8.913l-8.293 8.296a1 1 0 11-1.414-1.414l9-9.004a1.03 1.03 0 011.414 0l9 9.004A1 1 0 0121 17.502z"></path>
                        </svg>
                      </Flex>

                      <Flex
                        align="center"
                        justify="space-between"
                        p="12px"
                        mt={2}
                        borderBottom="1px solid"
                        borderColor="gray.200"
                        display={{ base: "none", md: "flex" }}
                      >
                        <Text fontSize="11.5pt">Advanced settings</Text>
                        <svg
                          aria-label="Down chevron icon"
                          color="#262626"
                          fill="#262626"
                          height="16"
                          role="img"
                          viewBox="0 0 24 24"
                          width="16"
                          style={{ transform: "rotate(90deg)" }}
                          cursor="pointer"
                        >
                          <path d="M21 17.502a.997.997 0 01-.707-.293L12 8.913l-8.293 8.296a1 1 0 11-1.414-1.414l9-9.004a1.03 1.03 0 011.414 0l9 9.004A1 1 0 0121 17.502z"></path>
                        </svg>
                      </Flex>
                    </Flex>
                  </Flex>
                </>
              )}
            </>
          )}
        </ModalContent>
      </Modal>
    </>
  );
};
export default PostUploadModal;
