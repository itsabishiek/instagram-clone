import { Box, Flex, Grid, Spinner, Text } from "@chakra-ui/react";
import { collection, doc, getDocs } from "firebase/firestore";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import { useRecoilState } from "recoil";
import { Post, postState } from "../../atoms/postsAtom";
import Posts from "../../components/post/Posts";
import { firestore } from "../../firebase/clientApp";

type ExplorePageProps = {};

const ExplorePage: React.FC<ExplorePageProps> = () => {
  const [postStateValue, setPostStateValue] = useRecoilState(postState);
  const [loading, setLoading] = useState(false);

  const getAllPosts = async () => {
    setLoading(true);
    try {
      const postDocRef = collection(firestore, "posts");
      const postDocs = await getDocs(postDocRef);
      const posts = postDocs.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
      setPostStateValue((prev) => ({
        ...prev,
        allPosts: posts as Post[],
      }));
    } catch (error) {
      console.log("getAllPosts Error", error);
    }
    setLoading(false);
  };

  useEffect(() => {
    getAllPosts();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  console.log(postStateValue.allPosts);

  if (loading)
    return (
      <Flex height="80vh" align="center" justify="center">
        <Spinner
          thickness="4px"
          speed="0.65s"
          emptyColor="gray.200"
          color="blue.500"
          size="lg"
        />
      </Flex>
    );

  return (
    <>
      <Head>
        <title>Explore â€¢ Instagram</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/2048px-Instagram_icon.png"
        />
      </Head>

      <Flex justify="center" mt={4}>
        <Grid
          maxW="935px"
          templateColumns="repeat(3, 1fr)"
          p={{ base: "0px", md: "20px 0px" }}
          gap={{ base: 0, md: 6 }}
        >
          {postStateValue.allPosts.map((post) => (
            <Posts key={post.id} post={post} />
          ))}
        </Grid>
      </Flex>
    </>
  );
};
export default ExplorePage;
