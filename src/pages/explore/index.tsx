import {
  Flex,
  Grid,
  Input,
  InputGroup,
  InputLeftElement,
  Spinner,
} from "@chakra-ui/react";
import { collection, getDocs } from "firebase/firestore";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import { useRecoilState } from "recoil";
import { Post, postState } from "../../atoms/postsAtom";
import Posts from "../../components/post/Posts";
import { firestore } from "../../firebase/clientApp";

type ExplorePageProps = {};

const ExplorePage: React.FC<ExplorePageProps> = () => {
  const [postStateValue, setPostStateValue] = useRecoilState(postState);
  const [loading, setLoading] = useState(false);
  const router = useRouter();

  const getAllPosts = async () => {
    setLoading(true);
    try {
      const postDocRef = collection(firestore, "posts");
      const postDocs = await getDocs(postDocRef);
      const posts = postDocs.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
      setPostStateValue((prev) => ({
        ...prev,
        allPosts: posts as Post[],
      }));
    } catch (error) {
      console.log("getAllPosts Error", error);
    }
    setLoading(false);
  };

  useEffect(() => {
    getAllPosts();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  console.log(postStateValue.allPosts);

  if (loading)
    return (
      <Flex height="80vh" align="center" justify="center">
        <Spinner
          thickness="4px"
          speed="0.65s"
          emptyColor="gray.200"
          color="blue.500"
          size="lg"
        />
      </Flex>
    );

  return (
    <Flex flexDir="column" align="center" justify="center">
      <Head>
        <title>Explore â€¢ Instagram</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/2048px-Instagram_icon.png"
        />
      </Head>

      <Flex mt={4} maxW="935px" flexDir="column">
        <Flex
          flexGrow={1}
          align="center"
          justify="center"
          maxWidth="100%"
          margin={{ base: "0 15px", md: "0 15px" }}
          display={{ base: "flex", md: "none" }}
        >
          <InputGroup>
            <InputLeftElement pointerEvents="none" mt={-0.5}>
              <svg
                aria-label="Search"
                color="#8e8e8e"
                fill="#8e8e8e"
                height="16"
                role="img"
                viewBox="0 0 24 24"
                width="16"
              >
                <path
                  d="M19 10.5A8.5 8.5 0 1110.5 2a8.5 8.5 0 018.5 8.5z"
                  fill="none"
                  stroke="currentColor"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                ></path>
                <line
                  fill="none"
                  stroke="currentColor"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  x1="16.511"
                  x2="22"
                  y1="16.511"
                  y2="22"
                ></line>
              </svg>
            </InputLeftElement>

            <Input
              placeholder="Search"
              _placeholder={{ color: "#8e8e8e", fontSize: "11pt" }}
              fontSize="11pt"
              bg="#efefef"
              border="none"
              _focus={{ outline: "none" }}
              focusBorderColor="none"
              h="36px"
              onFocus={() => router.push("/explore")}
            />
          </InputGroup>
        </Flex>

        <Grid
          templateColumns="repeat(3, 1fr)"
          p={{ base: "0px", md: "20px 0px" }}
          gap={{ base: 1, md: 6 }}
          mt={{ base: 4, md: 0 }}
        >
          {postStateValue.allPosts.map((post) => (
            <Posts key={post.id} post={post} />
          ))}
        </Grid>
      </Flex>
    </Flex>
  );
};
export default ExplorePage;
